INFO  14:11:48,043 - Compiling source file: C:\Users\dv170455d\eclipse-workspace\MJCompiler\test\program.mj
INFO  14:11:48,116 - #2 program
INFO  14:11:48,117 - #48 p
INFO  14:11:48,117 - #10 const
INFO  14:11:48,117 - #48 int
INFO  14:11:48,117 - #48 size
INFO  14:11:48,117 - #21 =
INFO  14:11:48,117 - #47 10
INFO  14:11:48,117 - #23 ;
INFO  14:11:48,117 - #7 class
INFO  14:11:48,118 - #48 Table
INFO  14:11:48,118 - #26 {
INFO  14:11:48,118 - #48 int
INFO  14:11:48,118 - #48 pos
INFO  14:11:48,119 - #43 [
INFO  14:11:48,119 - #44 ]
INFO  14:11:48,119 - #22 ,
INFO  14:11:48,119 - #48 neg
INFO  14:11:48,119 - #43 [
INFO  14:11:48,119 - #44 ]
INFO  14:11:48,119 - #23 ;
INFO  14:11:48,120 - #26 {
INFO  14:11:48,120 - #5 void
INFO  14:11:48,121 - #48 putp
INFO  14:11:48,121 - #24 (
INFO  14:11:48,121 - #48 int
INFO  14:11:48,121 - #48 a
INFO  14:11:48,121 - #22 ,
INFO  14:11:48,121 - #48 int
INFO  14:11:48,121 - #48 idx
INFO  14:11:48,121 - #25 )
INFO  14:11:48,121 - #26 {
INFO  14:11:48,122 - #48 this
INFO  14:11:48,122 - #42 .
INFO  14:11:48,122 - #48 pos
INFO  14:11:48,122 - #43 [
INFO  14:11:48,122 - #48 idx
INFO  14:11:48,122 - #44 ]
INFO  14:11:48,122 - #21 =
INFO  14:11:48,123 - #48 a
INFO  14:11:48,123 - #23 ;
INFO  14:11:48,123 - #27 }
INFO  14:11:48,123 - #5 void
INFO  14:11:48,124 - #48 putn
INFO  14:11:48,124 - #24 (
INFO  14:11:48,124 - #48 int
INFO  14:11:48,124 - #48 a
INFO  14:11:48,124 - #22 ,
INFO  14:11:48,124 - #48 int
INFO  14:11:48,124 - #48 idx
INFO  14:11:48,124 - #25 )
INFO  14:11:48,124 - #26 {
INFO  14:11:48,124 - #48 this
INFO  14:11:48,124 - #42 .
INFO  14:11:48,124 - #48 neg
INFO  14:11:48,124 - #43 [
INFO  14:11:48,125 - #48 idx
INFO  14:11:48,125 - #44 ]
INFO  14:11:48,125 - #21 =
INFO  14:11:48,125 - #48 a
INFO  14:11:48,125 - #23 ;
INFO  14:11:48,125 - #27 }
INFO  14:11:48,125 - #48 int
INFO  14:11:48,125 - #48 getp
INFO  14:11:48,125 - #24 (
INFO  14:11:48,125 - #48 int
INFO  14:11:48,125 - #48 idx
INFO  14:11:48,125 - #25 )
INFO  14:11:48,126 - #26 {
INFO  14:11:48,126 - #4 return
INFO  14:11:48,126 - #48 pos
INFO  14:11:48,126 - #43 [
INFO  14:11:48,126 - #48 idx
INFO  14:11:48,126 - #44 ]
INFO  14:11:48,126 - #23 ;
INFO  14:11:48,126 - #27 }
INFO  14:11:48,126 - #48 int
INFO  14:11:48,127 - #48 getn
INFO  14:11:48,127 - #24 (
INFO  14:11:48,127 - #48 int
INFO  14:11:48,127 - #48 idx
INFO  14:11:48,127 - #25 )
INFO  14:11:48,127 - #26 {
INFO  14:11:48,127 - #4 return
INFO  14:11:48,127 - #48 neg
INFO  14:11:48,127 - #43 [
INFO  14:11:48,127 - #48 idx
INFO  14:11:48,128 - #44 ]
INFO  14:11:48,128 - #23 ;
INFO  14:11:48,128 - #27 }
INFO  14:11:48,128 - #27 }
INFO  14:11:48,128 - #27 }
INFO  14:11:48,128 - #48 Table
INFO  14:11:48,128 - #48 val
INFO  14:11:48,128 - #23 ;
INFO  14:11:48,128 - #26 {
INFO  14:11:48,128 - #5 void
INFO  14:11:48,129 - #48 f
INFO  14:11:48,129 - #24 (
INFO  14:11:48,129 - #48 char
INFO  14:11:48,129 - #48 ch
INFO  14:11:48,129 - #22 ,
INFO  14:11:48,129 - #48 int
INFO  14:11:48,129 - #48 a
INFO  14:11:48,129 - #22 ,
INFO  14:11:48,129 - #48 int
INFO  14:11:48,129 - #48 arg
INFO  14:11:48,129 - #25 )
INFO  14:11:48,129 - #48 int
INFO  14:11:48,129 - #48 x
INFO  14:11:48,129 - #23 ;
INFO  14:11:48,129 - #26 {
INFO  14:11:48,129 - #48 x
INFO  14:11:48,129 - #21 =
INFO  14:11:48,130 - #48 arg
INFO  14:11:48,130 - #23 ;
INFO  14:11:48,130 - #27 }
INFO  14:11:48,130 - #5 void
INFO  14:11:48,130 - #48 main
INFO  14:11:48,130 - #24 (
INFO  14:11:48,130 - #25 )
INFO  14:11:48,130 - #48 int
INFO  14:11:48,130 - #48 x
INFO  14:11:48,130 - #22 ,
INFO  14:11:48,130 - #48 i
INFO  14:11:48,131 - #23 ;
INFO  14:11:48,131 - #48 char
INFO  14:11:48,131 - #48 c
INFO  14:11:48,131 - #23 ;
INFO  14:11:48,131 - #26 {
INFO  14:11:48,131 - #48 val
INFO  14:11:48,131 - #21 =
INFO  14:11:48,131 - #15 new
INFO  14:11:48,131 - #48 Table
INFO  14:11:48,131 - #23 ;
INFO  14:11:48,131 - #48 val
INFO  14:11:48,131 - #42 .
INFO  14:11:48,131 - #48 pos
INFO  14:11:48,132 - #21 =
INFO  14:11:48,132 - #15 new
INFO  14:11:48,132 - #48 int
INFO  14:11:48,132 - #43 [
INFO  14:11:48,132 - #48 size
INFO  14:11:48,132 - #44 ]
INFO  14:11:48,132 - #23 ;
INFO  14:11:48,132 - #48 val
INFO  14:11:48,132 - #42 .
INFO  14:11:48,132 - #48 neg
INFO  14:11:48,132 - #21 =
INFO  14:11:48,132 - #15 new
INFO  14:11:48,132 - #48 int
INFO  14:11:48,132 - #43 [
INFO  14:11:48,132 - #48 size
INFO  14:11:48,132 - #44 ]
INFO  14:11:48,132 - #23 ;
INFO  14:11:48,132 - #48 i
INFO  14:11:48,132 - #21 =
INFO  14:11:48,133 - #47 0
INFO  14:11:48,133 - #23 ;
INFO  14:11:48,133 - #13 do
INFO  14:11:48,133 - #26 {
INFO  14:11:48,133 - #48 val
INFO  14:11:48,133 - #42 .
INFO  14:11:48,133 - #48 putp
INFO  14:11:48,133 - #24 (
INFO  14:11:48,134 - #47 0
INFO  14:11:48,134 - #22 ,
INFO  14:11:48,134 - #48 i
INFO  14:11:48,134 - #25 )
INFO  14:11:48,134 - #23 ;
INFO  14:11:48,135 - #48 val
INFO  14:11:48,135 - #42 .
INFO  14:11:48,135 - #48 putn
INFO  14:11:48,135 - #24 (
INFO  14:11:48,135 - #47 0
INFO  14:11:48,135 - #22 ,
INFO  14:11:48,135 - #48 i
INFO  14:11:48,135 - #25 )
INFO  14:11:48,135 - #23 ;
INFO  14:11:48,135 - #48 i
INFO  14:11:48,135 - #40 ++
INFO  14:11:48,135 - #23 ;
INFO  14:11:48,135 - #27 }
INFO  14:11:48,135 - #14 while
INFO  14:11:48,135 - #24 (
INFO  14:11:48,135 - #48 i
INFO  14:11:48,135 - #36 <
INFO  14:11:48,135 - #48 size
INFO  14:11:48,136 - #25 )
INFO  14:11:48,136 - #23 ;
INFO  14:11:48,136 - #48 f
INFO  14:11:48,137 - #24 (
INFO  14:11:48,137 - #48 c
INFO  14:11:48,137 - #22 ,
INFO  14:11:48,137 - #48 x
INFO  14:11:48,137 - #22 ,
INFO  14:11:48,137 - #48 i
INFO  14:11:48,137 - #25 )
INFO  14:11:48,137 - #23 ;
INFO  14:11:48,137 - #16 read
INFO  14:11:48,137 - #24 (
INFO  14:11:48,137 - #48 x
INFO  14:11:48,137 - #25 )
INFO  14:11:48,137 - #23 ;
INFO  14:11:48,137 - #13 do
INFO  14:11:48,137 - #26 {
INFO  14:11:48,137 - #11 if
INFO  14:11:48,137 - #24 (
INFO  14:11:48,137 - #48 x
INFO  14:11:48,137 - #37 <=
INFO  14:11:48,137 - #47 0
INFO  14:11:48,138 - #25 )
INFO  14:11:48,138 - #6 break
INFO  14:11:48,138 - #23 ;
INFO  14:11:48,138 - #11 if
INFO  14:11:48,138 - #24 (
INFO  14:11:48,138 - #47 0
INFO  14:11:48,138 - #37 <=
INFO  14:11:48,138 - #48 x
INFO  14:11:48,139 - #38 &&
INFO  14:11:48,139 - #48 x
INFO  14:11:48,139 - #36 <
INFO  14:11:48,139 - #48 size
INFO  14:11:48,139 - #25 )
INFO  14:11:48,139 - #26 {
INFO  14:11:48,139 - #48 val
INFO  14:11:48,139 - #42 .
INFO  14:11:48,139 - #48 putp
INFO  14:11:48,139 - #24 (
INFO  14:11:48,142 - #48 val
INFO  14:11:48,142 - #42 .
INFO  14:11:48,142 - #48 getp
INFO  14:11:48,142 - #24 (
INFO  14:11:48,142 - #48 x
INFO  14:11:48,142 - #25 )
INFO  14:11:48,142 - #20 +
INFO  14:11:48,142 - #47 1
INFO  14:11:48,143 - #25 )
INFO  14:11:48,143 - #23 ;
INFO  14:11:48,143 - #27 }
INFO  14:11:48,143 - #9 else
INFO  14:11:48,143 - #11 if
INFO  14:11:48,143 - #24 (
INFO  14:11:48,143 - #28 â€?
INFO  14:11:48,144 - #48 size
INFO  14:11:48,144 - #36 <
INFO  14:11:48,144 - #48 x
INFO  14:11:48,144 - #38 &&
INFO  14:11:48,144 - #48 x
INFO  14:11:48,144 - #36 <
INFO  14:11:48,144 - #47 0
INFO  14:11:48,144 - #25 )
INFO  14:11:48,144 - #26 {
INFO  14:11:48,145 - #48 val
INFO  14:11:48,145 - #42 .
INFO  14:11:48,145 - #48 putn
INFO  14:11:48,146 - #24 (
INFO  14:11:48,146 - #48 val
INFO  14:11:48,146 - #42 .
INFO  14:11:48,146 - #48 getn
INFO  14:11:48,146 - #24 (
INFO  14:11:48,146 - #28 â€?
INFO  14:11:48,146 - #48 x
INFO  14:11:48,146 - #25 )
INFO  14:11:48,146 - #20 +
INFO  14:11:48,146 - #47 1
INFO  14:11:48,146 - #25 )
INFO  14:11:48,146 - #23 ;
INFO  14:11:48,146 - #27 }
INFO  14:11:48,146 - #16 read
INFO  14:11:48,147 - #24 (
INFO  14:11:48,147 - #48 x
INFO  14:11:48,147 - #25 )
INFO  14:11:48,147 - #23 ;
INFO  14:11:48,147 - #27 }
INFO  14:11:48,147 - #14 while
INFO  14:11:48,147 - #24 (
INFO  14:11:48,147 - #49 true
INFO  14:11:48,147 - #25 )
INFO  14:11:48,147 - #23 ;
INFO  14:11:48,148 - #3 print
INFO  14:11:48,148 - #24 (
INFO  14:11:48,148 - #48 x
INFO  14:11:48,148 - #36 <
ERROR 14:11:48,148 - 
Sintaksna greska na liniji 48
ERROR 14:11:48,148 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 48
