INFO  14:47:22,473 - Compiling source file: C:\Users\dv170455d\eclipse-workspace\MJCompiler\test\program.mj
INFO  14:47:22,544 - #2 program
INFO  14:47:22,544 - #48 p
INFO  14:47:22,544 - #10 const
INFO  14:47:22,545 - #48 int
INFO  14:47:22,545 - #48 size
INFO  14:47:22,545 - #21 =
INFO  14:47:22,545 - #47 10
INFO  14:47:22,545 - #23 ;
INFO  14:47:22,545 - #7 class
INFO  14:47:22,545 - #48 Table
INFO  14:47:22,545 - #26 {
INFO  14:47:22,546 - #48 int
INFO  14:47:22,546 - #48 pos
INFO  14:47:22,546 - #43 [
INFO  14:47:22,546 - #44 ]
INFO  14:47:22,546 - #22 ,
INFO  14:47:22,546 - #48 neg
INFO  14:47:22,546 - #43 [
INFO  14:47:22,546 - #44 ]
INFO  14:47:22,546 - #23 ;
INFO  14:47:22,546 - #26 {
INFO  14:47:22,547 - #5 void
INFO  14:47:22,628 - #48 putp
INFO  14:47:22,628 - #24 (
INFO  14:47:22,628 - #48 int
INFO  14:47:22,628 - #48 a
INFO  14:47:22,628 - #22 ,
INFO  14:47:22,628 - #48 int
INFO  14:47:22,628 - #48 idx
INFO  14:47:22,629 - #25 )
INFO  14:47:22,629 - #26 {
INFO  14:47:22,629 - #48 this
INFO  14:47:22,629 - #42 .
INFO  14:47:22,629 - #48 pos
INFO  14:47:22,629 - #43 [
INFO  14:47:22,629 - #48 idx
INFO  14:47:22,629 - #44 ]
INFO  14:47:22,630 - #21 =
INFO  14:47:22,630 - #48 a
INFO  14:47:22,632 - #23 ;
INFO  14:47:22,632 - #27 }
INFO  14:47:22,632 - #5 void
INFO  14:47:22,633 - #48 putn
INFO  14:47:22,633 - #24 (
INFO  14:47:22,633 - #48 int
INFO  14:47:22,633 - #48 a
INFO  14:47:22,633 - #22 ,
INFO  14:47:22,633 - #48 int
INFO  14:47:22,633 - #48 idx
INFO  14:47:22,633 - #25 )
INFO  14:47:22,633 - #26 {
INFO  14:47:22,633 - #48 this
INFO  14:47:22,633 - #42 .
INFO  14:47:22,633 - #48 neg
INFO  14:47:22,633 - #43 [
INFO  14:47:22,634 - #48 idx
INFO  14:47:22,634 - #44 ]
INFO  14:47:22,634 - #21 =
INFO  14:47:22,634 - #48 a
INFO  14:47:22,634 - #23 ;
INFO  14:47:22,634 - #27 }
INFO  14:47:22,634 - #48 int
INFO  14:47:22,634 - #48 getp
INFO  14:47:22,634 - #24 (
INFO  14:47:22,634 - #48 int
INFO  14:47:22,634 - #48 idx
INFO  14:47:22,634 - #25 )
INFO  14:47:22,634 - #26 {
INFO  14:47:22,635 - #4 return
INFO  14:47:22,635 - #48 pos
INFO  14:47:22,635 - #43 [
INFO  14:47:22,635 - #48 idx
INFO  14:47:22,635 - #44 ]
INFO  14:47:22,635 - #23 ;
INFO  14:47:22,635 - #27 }
INFO  14:47:22,635 - #48 int
INFO  14:47:22,635 - #48 getn
INFO  14:47:22,635 - #24 (
INFO  14:47:22,635 - #48 int
INFO  14:47:22,636 - #48 idx
INFO  14:47:22,636 - #25 )
INFO  14:47:22,636 - #26 {
INFO  14:47:22,636 - #4 return
INFO  14:47:22,636 - #48 neg
INFO  14:47:22,636 - #43 [
INFO  14:47:22,636 - #48 idx
INFO  14:47:22,636 - #44 ]
INFO  14:47:22,636 - #23 ;
INFO  14:47:22,636 - #27 }
INFO  14:47:22,636 - #27 }
INFO  14:47:22,636 - #27 }
INFO  14:47:22,636 - #48 Table
INFO  14:47:22,637 - #48 val
INFO  14:47:22,637 - #23 ;
INFO  14:47:22,637 - #26 {
INFO  14:47:22,637 - #5 void
INFO  14:47:22,637 - #48 f
INFO  14:47:22,637 - #24 (
INFO  14:47:22,637 - #48 char
INFO  14:47:22,637 - #48 ch
INFO  14:47:22,637 - #22 ,
INFO  14:47:22,637 - #48 int
INFO  14:47:22,637 - #48 a
INFO  14:47:22,637 - #22 ,
INFO  14:47:22,637 - #48 int
INFO  14:47:22,637 - #48 arg
INFO  14:47:22,637 - #25 )
INFO  14:47:22,638 - #48 int
INFO  14:47:22,638 - #48 x
INFO  14:47:22,638 - #23 ;
INFO  14:47:22,638 - #26 {
INFO  14:47:22,638 - #48 x
INFO  14:47:22,638 - #21 =
INFO  14:47:22,638 - #48 arg
INFO  14:47:22,638 - #23 ;
INFO  14:47:22,638 - #27 }
INFO  14:47:22,638 - #5 void
INFO  14:47:22,638 - #48 main
INFO  14:47:22,638 - #24 (
INFO  14:47:22,638 - #25 )
INFO  14:47:22,638 - #48 int
INFO  14:47:22,638 - #48 x
INFO  14:47:22,638 - #22 ,
INFO  14:47:22,639 - #48 i
INFO  14:47:22,639 - #23 ;
INFO  14:47:22,639 - #48 char
INFO  14:47:22,639 - #48 c
INFO  14:47:22,639 - #23 ;
INFO  14:47:22,639 - #26 {
INFO  14:47:22,639 - #48 val
INFO  14:47:22,639 - #21 =
INFO  14:47:22,639 - #15 new
INFO  14:47:22,639 - #48 Table
INFO  14:47:22,640 - #23 ;
INFO  14:47:22,640 - #48 val
INFO  14:47:22,640 - #42 .
INFO  14:47:22,640 - #48 pos
INFO  14:47:22,640 - #21 =
INFO  14:47:22,640 - #15 new
INFO  14:47:22,640 - #48 int
INFO  14:47:22,640 - #43 [
INFO  14:47:22,640 - #48 size
INFO  14:47:22,640 - #44 ]
INFO  14:47:22,640 - #23 ;
INFO  14:47:22,641 - #48 val
INFO  14:47:22,641 - #42 .
INFO  14:47:22,641 - #48 neg
INFO  14:47:22,641 - #21 =
INFO  14:47:22,641 - #15 new
INFO  14:47:22,641 - #48 int
INFO  14:47:22,641 - #43 [
INFO  14:47:22,641 - #48 size
INFO  14:47:22,641 - #44 ]
INFO  14:47:22,641 - #23 ;
INFO  14:47:22,641 - #48 i
INFO  14:47:22,641 - #21 =
INFO  14:47:22,641 - #47 0
INFO  14:47:22,641 - #23 ;
INFO  14:47:22,641 - #13 do
INFO  14:47:22,641 - #26 {
INFO  14:47:22,641 - #48 val
INFO  14:47:22,641 - #42 .
INFO  14:47:22,642 - #48 putp
INFO  14:47:22,642 - #24 (
INFO  14:47:22,643 - #47 0
INFO  14:47:22,643 - #22 ,
INFO  14:47:22,643 - #48 i
INFO  14:47:22,643 - #25 )
INFO  14:47:22,643 - #23 ;
INFO  14:47:22,644 - #48 val
INFO  14:47:22,644 - #42 .
INFO  14:47:22,644 - #48 putn
INFO  14:47:22,644 - #24 (
INFO  14:47:22,644 - #47 0
INFO  14:47:22,644 - #22 ,
INFO  14:47:22,644 - #48 i
INFO  14:47:22,644 - #25 )
INFO  14:47:22,644 - #23 ;
INFO  14:47:22,644 - #48 i
INFO  14:47:22,644 - #40 ++
INFO  14:47:22,644 - #23 ;
INFO  14:47:22,645 - #27 }
INFO  14:47:22,645 - #14 while
INFO  14:47:22,645 - #24 (
INFO  14:47:22,645 - #48 i
INFO  14:47:22,645 - #36 <
INFO  14:47:22,645 - #48 size
INFO  14:47:22,646 - #25 )
INFO  14:47:22,646 - #23 ;
INFO  14:47:22,646 - #48 f
INFO  14:47:22,647 - #24 (
INFO  14:47:22,647 - #48 c
INFO  14:47:22,647 - #22 ,
INFO  14:47:22,647 - #48 x
INFO  14:47:22,647 - #22 ,
INFO  14:47:22,647 - #48 i
INFO  14:47:22,647 - #25 )
INFO  14:47:22,647 - #23 ;
INFO  14:47:22,647 - #16 read
INFO  14:47:22,647 - #24 (
INFO  14:47:22,648 - #48 x
INFO  14:47:22,648 - #25 )
INFO  14:47:22,648 - #23 ;
INFO  14:47:22,648 - #13 do
INFO  14:47:22,648 - #26 {
INFO  14:47:22,648 - #11 if
INFO  14:47:22,648 - #24 (
INFO  14:47:22,648 - #48 x
INFO  14:47:22,648 - #37 <=
INFO  14:47:22,648 - #47 0
INFO  14:47:22,649 - #25 )
INFO  14:47:22,649 - #6 break
INFO  14:47:22,649 - #23 ;
INFO  14:47:22,649 - #11 if
INFO  14:47:22,650 - #24 (
INFO  14:47:22,650 - #47 0
INFO  14:47:22,650 - #37 <=
INFO  14:47:22,650 - #48 x
INFO  14:47:22,650 - #38 &&
INFO  14:47:22,650 - #48 x
INFO  14:47:22,650 - #36 <
INFO  14:47:22,650 - #48 size
INFO  14:47:22,650 - #25 )
INFO  14:47:22,650 - #26 {
INFO  14:47:22,650 - #48 val
INFO  14:47:22,650 - #42 .
INFO  14:47:22,650 - #48 putp
INFO  14:47:22,651 - #24 (
INFO  14:47:22,651 - #48 val
INFO  14:47:22,651 - #42 .
INFO  14:47:22,651 - #48 getp
INFO  14:47:22,651 - #24 (
INFO  14:47:22,651 - #48 x
INFO  14:47:22,651 - #25 )
INFO  14:47:22,651 - #20 +
INFO  14:47:22,651 - #47 1
INFO  14:47:22,652 - #25 )
INFO  14:47:22,652 - #23 ;
INFO  14:47:22,652 - #27 }
INFO  14:47:22,652 - #9 else
INFO  14:47:22,652 - #11 if
INFO  14:47:22,652 - #24 (
INFO  14:47:22,652 - #28 â€?
INFO  14:47:22,653 - #48 size
INFO  14:47:22,653 - #36 <
INFO  14:47:22,653 - #48 x
INFO  14:47:22,653 - #38 &&
INFO  14:47:22,653 - #48 x
INFO  14:47:22,653 - #36 <
INFO  14:47:22,653 - #47 0
INFO  14:47:22,653 - #25 )
INFO  14:47:22,654 - #26 {
INFO  14:47:22,654 - #48 val
INFO  14:47:22,654 - #42 .
INFO  14:47:22,654 - #48 putn
INFO  14:47:22,654 - #24 (
INFO  14:47:22,654 - #48 val
INFO  14:47:22,654 - #42 .
INFO  14:47:22,654 - #48 getn
INFO  14:47:22,654 - #24 (
INFO  14:47:22,655 - #28 â€?
INFO  14:47:22,655 - #48 x
INFO  14:47:22,655 - #25 )
INFO  14:47:22,655 - #20 +
INFO  14:47:22,655 - #47 1
INFO  14:47:22,655 - #25 )
INFO  14:47:22,655 - #23 ;
INFO  14:47:22,655 - #27 }
INFO  14:47:22,655 - #16 read
INFO  14:47:22,655 - #24 (
INFO  14:47:22,656 - #48 x
INFO  14:47:22,656 - #25 )
INFO  14:47:22,656 - #23 ;
INFO  14:47:22,656 - #27 }
INFO  14:47:22,656 - #14 while
INFO  14:47:22,656 - #24 (
INFO  14:47:22,656 - #49 true
INFO  14:47:22,656 - #25 )
INFO  14:47:22,656 - #23 ;
INFO  14:47:22,656 - #3 print
INFO  14:47:22,656 - #24 (
INFO  14:47:22,657 - #48 x
INFO  14:47:22,657 - #36 <
ERROR 14:47:22,657 - 
Sintaksna greska na liniji 48
ERROR 14:47:22,657 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 48
