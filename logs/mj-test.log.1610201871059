INFO  15:16:08,498 - Compiling source file: C:\Users\dv170455d\eclipse-workspace\MJCompiler\test\program.mj
INFO  15:16:08,567 - #2 program
INFO  15:16:08,567 - #48 p
INFO  15:16:08,567 - #10 const
INFO  15:16:08,568 - #48 int
INFO  15:16:08,568 - #48 size
INFO  15:16:08,568 - #21 =
INFO  15:16:08,568 - #47 10
INFO  15:16:08,568 - #23 ;
INFO  15:16:08,568 - #7 class
INFO  15:16:08,569 - #48 Table
INFO  15:16:08,569 - #26 {
INFO  15:16:08,569 - #48 int
INFO  15:16:08,569 - #48 pos
INFO  15:16:08,569 - #43 [
INFO  15:16:08,569 - #44 ]
INFO  15:16:08,569 - #22 ,
INFO  15:16:08,569 - #48 neg
INFO  15:16:08,569 - #43 [
INFO  15:16:08,569 - #44 ]
INFO  15:16:08,569 - #23 ;
INFO  15:16:08,570 - #26 {
INFO  15:16:08,570 - #5 void
INFO  15:16:08,570 - #48 putp
INFO  15:16:08,570 - #24 (
INFO  15:16:08,570 - #48 int
INFO  15:16:08,570 - #48 a
INFO  15:16:08,571 - #22 ,
INFO  15:16:08,571 - #48 int
INFO  15:16:08,571 - #48 idx
INFO  15:16:08,571 - #25 )
INFO  15:16:08,571 - #26 {
INFO  15:16:08,571 - #48 this
INFO  15:16:08,571 - #42 .
INFO  15:16:08,571 - #48 pos
INFO  15:16:08,571 - #43 [
INFO  15:16:08,571 - #48 idx
INFO  15:16:08,572 - #44 ]
INFO  15:16:08,572 - #21 =
INFO  15:16:08,572 - #48 a
INFO  15:16:08,573 - #23 ;
INFO  15:16:08,573 - #27 }
INFO  15:16:08,573 - #5 void
INFO  15:16:08,574 - #48 putn
INFO  15:16:08,574 - #24 (
INFO  15:16:08,574 - #48 int
INFO  15:16:08,574 - #48 a
INFO  15:16:08,574 - #22 ,
INFO  15:16:08,574 - #48 int
INFO  15:16:08,574 - #48 idx
INFO  15:16:08,574 - #25 )
INFO  15:16:08,574 - #26 {
INFO  15:16:08,574 - #48 this
INFO  15:16:08,574 - #42 .
INFO  15:16:08,575 - #48 neg
INFO  15:16:08,575 - #43 [
INFO  15:16:08,575 - #48 idx
INFO  15:16:08,575 - #44 ]
INFO  15:16:08,575 - #21 =
INFO  15:16:08,575 - #48 a
INFO  15:16:08,575 - #23 ;
INFO  15:16:08,575 - #27 }
INFO  15:16:08,575 - #48 int
INFO  15:16:08,575 - #48 getp
INFO  15:16:08,575 - #24 (
INFO  15:16:08,575 - #48 int
INFO  15:16:08,576 - #48 idx
INFO  15:16:08,576 - #25 )
INFO  15:16:08,576 - #26 {
INFO  15:16:08,576 - #4 return
INFO  15:16:08,576 - #48 pos
INFO  15:16:08,576 - #43 [
INFO  15:16:08,576 - #48 idx
INFO  15:16:08,576 - #44 ]
INFO  15:16:08,576 - #23 ;
INFO  15:16:08,576 - #27 }
INFO  15:16:08,577 - #48 int
INFO  15:16:08,577 - #48 getn
INFO  15:16:08,577 - #24 (
INFO  15:16:08,577 - #48 int
INFO  15:16:08,577 - #48 idx
INFO  15:16:08,577 - #25 )
INFO  15:16:08,577 - #26 {
INFO  15:16:08,577 - #4 return
INFO  15:16:08,577 - #48 neg
INFO  15:16:08,578 - #43 [
INFO  15:16:08,578 - #48 idx
INFO  15:16:08,578 - #44 ]
INFO  15:16:08,578 - #23 ;
INFO  15:16:08,578 - #27 }
INFO  15:16:08,578 - #27 }
INFO  15:16:08,578 - #27 }
INFO  15:16:08,578 - #48 Table
INFO  15:16:08,578 - #48 val
INFO  15:16:08,579 - #23 ;
INFO  15:16:08,579 - #26 {
INFO  15:16:08,579 - #5 void
INFO  15:16:08,579 - #48 f
INFO  15:16:08,579 - #24 (
INFO  15:16:08,579 - #48 char
INFO  15:16:08,579 - #48 ch
INFO  15:16:08,581 - #22 ,
INFO  15:16:08,581 - #48 int
INFO  15:16:08,581 - #48 a
INFO  15:16:08,581 - #22 ,
INFO  15:16:08,581 - #48 int
INFO  15:16:08,581 - #48 arg
INFO  15:16:08,581 - #25 )
INFO  15:16:08,581 - #48 int
INFO  15:16:08,581 - #48 x
INFO  15:16:08,581 - #23 ;
INFO  15:16:08,581 - #26 {
INFO  15:16:08,581 - #48 x
INFO  15:16:08,582 - #21 =
INFO  15:16:08,582 - #48 arg
INFO  15:16:08,582 - #23 ;
INFO  15:16:08,582 - #27 }
INFO  15:16:08,582 - #5 void
INFO  15:16:08,582 - #48 main
INFO  15:16:08,582 - #24 (
INFO  15:16:08,582 - #25 )
INFO  15:16:08,582 - #48 int
INFO  15:16:08,582 - #48 x
INFO  15:16:08,582 - #22 ,
INFO  15:16:08,582 - #48 i
INFO  15:16:08,583 - #23 ;
INFO  15:16:08,583 - #48 char
INFO  15:16:08,583 - #48 c
INFO  15:16:08,583 - #23 ;
INFO  15:16:08,583 - #26 {
INFO  15:16:08,583 - #48 val
INFO  15:16:08,583 - #21 =
INFO  15:16:08,584 - #15 new
INFO  15:16:08,584 - #48 Table
INFO  15:16:08,584 - #23 ;
INFO  15:16:08,584 - #48 val
INFO  15:16:08,584 - #42 .
INFO  15:16:08,584 - #48 pos
INFO  15:16:08,584 - #21 =
INFO  15:16:08,584 - #15 new
INFO  15:16:08,584 - #48 int
INFO  15:16:08,584 - #43 [
INFO  15:16:08,584 - #48 size
INFO  15:16:08,584 - #44 ]
INFO  15:16:08,584 - #23 ;
INFO  15:16:08,585 - #48 val
INFO  15:16:08,585 - #42 .
INFO  15:16:08,585 - #48 neg
INFO  15:16:08,585 - #21 =
INFO  15:16:08,585 - #15 new
INFO  15:16:08,585 - #48 int
INFO  15:16:08,585 - #43 [
INFO  15:16:08,585 - #48 size
INFO  15:16:08,585 - #44 ]
INFO  15:16:08,585 - #23 ;
INFO  15:16:08,585 - #48 i
INFO  15:16:08,585 - #21 =
INFO  15:16:08,585 - #47 0
INFO  15:16:08,585 - #23 ;
INFO  15:16:08,585 - #13 do
INFO  15:16:08,585 - #26 {
INFO  15:16:08,585 - #48 val
INFO  15:16:08,585 - #42 .
INFO  15:16:08,585 - #48 putp
INFO  15:16:08,586 - #24 (
INFO  15:16:08,586 - #47 0
INFO  15:16:08,586 - #22 ,
INFO  15:16:08,586 - #48 i
INFO  15:16:08,586 - #25 )
INFO  15:16:08,586 - #23 ;
INFO  15:16:08,586 - #48 val
INFO  15:16:08,586 - #42 .
INFO  15:16:08,586 - #48 putn
INFO  15:16:08,586 - #24 (
INFO  15:16:08,586 - #47 0
INFO  15:16:08,586 - #22 ,
INFO  15:16:08,587 - #48 i
INFO  15:16:08,587 - #25 )
INFO  15:16:08,587 - #23 ;
INFO  15:16:08,587 - #48 i
INFO  15:16:08,587 - #40 ++
INFO  15:16:08,587 - #23 ;
INFO  15:16:08,587 - #27 }
INFO  15:16:08,587 - #14 while
INFO  15:16:08,587 - #24 (
INFO  15:16:08,587 - #48 i
INFO  15:16:08,587 - #36 <
INFO  15:16:08,588 - #48 size
INFO  15:16:08,588 - #25 )
INFO  15:16:08,589 - #23 ;
INFO  15:16:08,589 - #48 f
INFO  15:16:08,589 - #24 (
INFO  15:16:08,589 - #48 c
INFO  15:16:08,589 - #22 ,
INFO  15:16:08,589 - #48 x
INFO  15:16:08,589 - #22 ,
INFO  15:16:08,589 - #48 i
INFO  15:16:08,589 - #25 )
INFO  15:16:08,590 - #23 ;
INFO  15:16:08,590 - #16 read
INFO  15:16:08,590 - #24 (
INFO  15:16:08,590 - #48 x
INFO  15:16:08,590 - #25 )
INFO  15:16:08,590 - #23 ;
INFO  15:16:08,590 - #13 do
INFO  15:16:08,590 - #26 {
INFO  15:16:08,590 - #11 if
INFO  15:16:08,590 - #24 (
INFO  15:16:08,590 - #48 x
INFO  15:16:08,590 - #37 <=
INFO  15:16:08,590 - #47 0
INFO  15:16:08,591 - #25 )
INFO  15:16:08,591 - #6 break
INFO  15:16:08,591 - #23 ;
INFO  15:16:08,591 - #11 if
INFO  15:16:08,592 - #24 (
INFO  15:16:08,592 - #47 0
INFO  15:16:08,592 - #37 <=
INFO  15:16:08,592 - #48 x
INFO  15:16:08,592 - #38 &&
INFO  15:16:08,592 - #48 x
INFO  15:16:08,592 - #36 <
INFO  15:16:08,592 - #48 size
INFO  15:16:08,592 - #25 )
INFO  15:16:08,592 - #26 {
INFO  15:16:08,592 - #48 val
INFO  15:16:08,593 - #42 .
INFO  15:16:08,593 - #48 putp
INFO  15:16:08,593 - #24 (
INFO  15:16:08,593 - #48 val
INFO  15:16:08,593 - #42 .
INFO  15:16:08,593 - #48 getp
INFO  15:16:08,593 - #24 (
INFO  15:16:08,593 - #48 x
INFO  15:16:08,593 - #25 )
INFO  15:16:08,593 - #20 +
INFO  15:16:08,593 - #47 1
INFO  15:16:08,594 - #25 )
INFO  15:16:08,594 - #23 ;
INFO  15:16:08,594 - #27 }
INFO  15:16:08,594 - #9 else
INFO  15:16:08,594 - #11 if
INFO  15:16:08,594 - #24 (
INFO  15:16:08,595 - #28 â€?
INFO  15:16:08,595 - #48 size
INFO  15:16:08,595 - #36 <
INFO  15:16:08,595 - #48 x
INFO  15:16:08,595 - #38 &&
INFO  15:16:08,596 - #48 x
INFO  15:16:08,596 - #36 <
INFO  15:16:08,596 - #47 0
INFO  15:16:08,596 - #25 )
INFO  15:16:08,596 - #26 {
INFO  15:16:08,596 - #48 val
INFO  15:16:08,596 - #42 .
INFO  15:16:08,596 - #48 putn
INFO  15:16:08,597 - #24 (
INFO  15:16:08,597 - #48 val
INFO  15:16:08,597 - #42 .
INFO  15:16:08,597 - #48 getn
INFO  15:16:08,597 - #24 (
INFO  15:16:08,597 - #28 â€?
INFO  15:16:08,597 - #48 x
INFO  15:16:08,597 - #25 )
INFO  15:16:08,597 - #20 +
INFO  15:16:08,597 - #47 1
INFO  15:16:08,597 - #25 )
INFO  15:16:08,598 - #23 ;
INFO  15:16:08,598 - #27 }
INFO  15:16:08,598 - #16 read
INFO  15:16:08,598 - #24 (
INFO  15:16:08,598 - #48 x
INFO  15:16:08,598 - #25 )
INFO  15:16:08,598 - #23 ;
INFO  15:16:08,598 - #27 }
INFO  15:16:08,598 - #14 while
INFO  15:16:08,598 - #24 (
INFO  15:16:08,599 - #49 true
INFO  15:16:08,599 - #25 )
INFO  15:16:08,599 - #23 ;
INFO  15:16:08,599 - #3 print
INFO  15:16:08,599 - #24 (
INFO  15:16:08,599 - #48 x
INFO  15:16:08,599 - #36 <
ERROR 15:16:08,600 - 
Sintaksna greska na liniji 48
ERROR 15:16:08,600 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 48
