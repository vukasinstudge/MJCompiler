INFO  14:20:13,851 - Compiling source file: C:\Users\dv170455d\eclipse-workspace\MJCompiler\test\program.mj
INFO  14:20:14,020 - #2 program
INFO  14:20:14,020 - #48 p
INFO  14:20:14,020 - #10 const
INFO  14:20:14,020 - #48 int
INFO  14:20:14,020 - #48 size
INFO  14:20:14,020 - #21 =
INFO  14:20:14,020 - #47 10
INFO  14:20:14,020 - #23 ;
INFO  14:20:14,020 - #7 class
INFO  14:20:14,021 - #48 Table
INFO  14:20:14,021 - #26 {
INFO  14:20:14,021 - #48 int
INFO  14:20:14,021 - #48 pos
INFO  14:20:14,021 - #43 [
INFO  14:20:14,021 - #44 ]
INFO  14:20:14,021 - #22 ,
INFO  14:20:14,021 - #48 neg
INFO  14:20:14,021 - #43 [
INFO  14:20:14,022 - #44 ]
INFO  14:20:14,022 - #23 ;
INFO  14:20:14,022 - #26 {
INFO  14:20:14,022 - #5 void
INFO  14:20:14,096 - #48 putp
INFO  14:20:14,096 - #24 (
INFO  14:20:14,096 - #48 int
INFO  14:20:14,096 - #48 a
INFO  14:20:14,096 - #22 ,
INFO  14:20:14,096 - #48 int
INFO  14:20:14,096 - #48 idx
INFO  14:20:14,096 - #25 )
INFO  14:20:14,097 - #26 {
INFO  14:20:14,097 - #48 this
INFO  14:20:14,097 - #42 .
INFO  14:20:14,097 - #48 pos
INFO  14:20:14,097 - #43 [
INFO  14:20:14,097 - #48 idx
INFO  14:20:14,097 - #44 ]
INFO  14:20:14,097 - #21 =
INFO  14:20:14,098 - #48 a
INFO  14:20:14,098 - #23 ;
INFO  14:20:14,098 - #27 }
INFO  14:20:14,098 - #5 void
INFO  14:20:14,099 - #48 putn
INFO  14:20:14,099 - #24 (
INFO  14:20:14,099 - #48 int
INFO  14:20:14,099 - #48 a
INFO  14:20:14,099 - #22 ,
INFO  14:20:14,099 - #48 int
INFO  14:20:14,099 - #48 idx
INFO  14:20:14,099 - #25 )
INFO  14:20:14,099 - #26 {
INFO  14:20:14,099 - #48 this
INFO  14:20:14,099 - #42 .
INFO  14:20:14,099 - #48 neg
INFO  14:20:14,099 - #43 [
INFO  14:20:14,099 - #48 idx
INFO  14:20:14,099 - #44 ]
INFO  14:20:14,099 - #21 =
INFO  14:20:14,099 - #48 a
INFO  14:20:14,099 - #23 ;
INFO  14:20:14,100 - #27 }
INFO  14:20:14,100 - #48 int
INFO  14:20:14,100 - #48 getp
INFO  14:20:14,100 - #24 (
INFO  14:20:14,100 - #48 int
INFO  14:20:14,100 - #48 idx
INFO  14:20:14,100 - #25 )
INFO  14:20:14,100 - #26 {
INFO  14:20:14,100 - #4 return
INFO  14:20:14,100 - #48 pos
INFO  14:20:14,101 - #43 [
INFO  14:20:14,101 - #48 idx
INFO  14:20:14,101 - #44 ]
INFO  14:20:14,101 - #23 ;
INFO  14:20:14,101 - #27 }
INFO  14:20:14,101 - #48 int
INFO  14:20:14,101 - #48 getn
INFO  14:20:14,101 - #24 (
INFO  14:20:14,101 - #48 int
INFO  14:20:14,101 - #48 idx
INFO  14:20:14,101 - #25 )
INFO  14:20:14,101 - #26 {
INFO  14:20:14,101 - #4 return
INFO  14:20:14,101 - #48 neg
INFO  14:20:14,101 - #43 [
INFO  14:20:14,101 - #48 idx
INFO  14:20:14,102 - #44 ]
INFO  14:20:14,102 - #23 ;
INFO  14:20:14,102 - #27 }
INFO  14:20:14,102 - #27 }
INFO  14:20:14,102 - #27 }
INFO  14:20:14,102 - #48 Table
INFO  14:20:14,102 - #48 val
INFO  14:20:14,102 - #23 ;
INFO  14:20:14,103 - #26 {
INFO  14:20:14,103 - #5 void
INFO  14:20:14,103 - #48 f
INFO  14:20:14,103 - #24 (
INFO  14:20:14,103 - #48 char
INFO  14:20:14,103 - #48 ch
INFO  14:20:14,103 - #22 ,
INFO  14:20:14,103 - #48 int
INFO  14:20:14,103 - #48 a
INFO  14:20:14,103 - #22 ,
INFO  14:20:14,103 - #48 int
INFO  14:20:14,103 - #48 arg
INFO  14:20:14,104 - #25 )
INFO  14:20:14,104 - #48 int
INFO  14:20:14,104 - #48 x
INFO  14:20:14,104 - #23 ;
INFO  14:20:14,104 - #26 {
INFO  14:20:14,104 - #48 x
INFO  14:20:14,104 - #21 =
INFO  14:20:14,104 - #48 arg
INFO  14:20:14,104 - #23 ;
INFO  14:20:14,104 - #27 }
INFO  14:20:14,104 - #5 void
INFO  14:20:14,104 - #48 main
INFO  14:20:14,105 - #24 (
INFO  14:20:14,105 - #25 )
INFO  14:20:14,105 - #48 int
INFO  14:20:14,105 - #48 x
INFO  14:20:14,105 - #22 ,
INFO  14:20:14,105 - #48 i
INFO  14:20:14,105 - #23 ;
INFO  14:20:14,105 - #48 char
INFO  14:20:14,105 - #48 c
INFO  14:20:14,105 - #23 ;
INFO  14:20:14,105 - #26 {
INFO  14:20:14,105 - #48 val
INFO  14:20:14,105 - #21 =
INFO  14:20:14,105 - #15 new
INFO  14:20:14,105 - #48 Table
INFO  14:20:14,106 - #23 ;
INFO  14:20:14,106 - #48 val
INFO  14:20:14,106 - #42 .
INFO  14:20:14,106 - #48 pos
INFO  14:20:14,106 - #21 =
INFO  14:20:14,106 - #15 new
INFO  14:20:14,106 - #48 int
INFO  14:20:14,106 - #43 [
INFO  14:20:14,106 - #48 size
INFO  14:20:14,106 - #44 ]
INFO  14:20:14,106 - #23 ;
INFO  14:20:14,106 - #48 val
INFO  14:20:14,106 - #42 .
INFO  14:20:14,106 - #48 neg
INFO  14:20:14,106 - #21 =
INFO  14:20:14,106 - #15 new
INFO  14:20:14,106 - #48 int
INFO  14:20:14,106 - #43 [
INFO  14:20:14,106 - #48 size
INFO  14:20:14,106 - #44 ]
INFO  14:20:14,107 - #23 ;
INFO  14:20:14,107 - #48 i
INFO  14:20:14,107 - #21 =
INFO  14:20:14,107 - #47 0
INFO  14:20:14,107 - #23 ;
INFO  14:20:14,107 - #13 do
INFO  14:20:14,107 - #26 {
INFO  14:20:14,107 - #48 val
INFO  14:20:14,107 - #42 .
INFO  14:20:14,107 - #48 putp
INFO  14:20:14,107 - #24 (
INFO  14:20:14,108 - #47 0
INFO  14:20:14,108 - #22 ,
INFO  14:20:14,108 - #48 i
INFO  14:20:14,109 - #25 )
INFO  14:20:14,109 - #23 ;
INFO  14:20:14,109 - #48 val
INFO  14:20:14,109 - #42 .
INFO  14:20:14,109 - #48 putn
INFO  14:20:14,109 - #24 (
INFO  14:20:14,109 - #47 0
INFO  14:20:14,109 - #22 ,
INFO  14:20:14,109 - #48 i
INFO  14:20:14,109 - #25 )
INFO  14:20:14,109 - #23 ;
INFO  14:20:14,109 - #48 i
INFO  14:20:14,109 - #40 ++
INFO  14:20:14,109 - #23 ;
INFO  14:20:14,110 - #27 }
INFO  14:20:14,110 - #14 while
INFO  14:20:14,110 - #24 (
INFO  14:20:14,110 - #48 i
INFO  14:20:14,110 - #36 <
INFO  14:20:14,110 - #48 size
INFO  14:20:14,111 - #25 )
INFO  14:20:14,111 - #23 ;
INFO  14:20:14,111 - #48 f
INFO  14:20:14,111 - #24 (
INFO  14:20:14,111 - #48 c
INFO  14:20:14,111 - #22 ,
INFO  14:20:14,111 - #48 x
INFO  14:20:14,111 - #22 ,
INFO  14:20:14,111 - #48 i
INFO  14:20:14,112 - #25 )
INFO  14:20:14,112 - #23 ;
INFO  14:20:14,112 - #16 read
INFO  14:20:14,112 - #24 (
INFO  14:20:14,112 - #48 x
INFO  14:20:14,112 - #25 )
INFO  14:20:14,112 - #23 ;
INFO  14:20:14,112 - #13 do
INFO  14:20:14,112 - #26 {
INFO  14:20:14,112 - #11 if
INFO  14:20:14,112 - #24 (
INFO  14:20:14,112 - #48 x
INFO  14:20:14,112 - #37 <=
INFO  14:20:14,112 - #47 0
INFO  14:20:14,113 - #25 )
INFO  14:20:14,113 - #6 break
INFO  14:20:14,113 - #23 ;
INFO  14:20:14,113 - #11 if
INFO  14:20:14,113 - #24 (
INFO  14:20:14,114 - #47 0
INFO  14:20:14,114 - #37 <=
INFO  14:20:14,114 - #48 x
INFO  14:20:14,114 - #38 &&
INFO  14:20:14,114 - #48 x
INFO  14:20:14,114 - #36 <
INFO  14:20:14,114 - #48 size
INFO  14:20:14,114 - #25 )
INFO  14:20:14,114 - #26 {
INFO  14:20:14,114 - #48 val
INFO  14:20:14,114 - #42 .
INFO  14:20:14,114 - #48 putp
INFO  14:20:14,114 - #24 (
INFO  14:20:14,114 - #48 val
INFO  14:20:14,114 - #42 .
INFO  14:20:14,114 - #48 getp
INFO  14:20:14,114 - #24 (
INFO  14:20:14,114 - #48 x
INFO  14:20:14,114 - #25 )
INFO  14:20:14,114 - #20 +
INFO  14:20:14,114 - #47 1
INFO  14:20:14,115 - #25 )
INFO  14:20:14,115 - #23 ;
INFO  14:20:14,115 - #27 }
INFO  14:20:14,115 - #9 else
INFO  14:20:14,115 - #11 if
INFO  14:20:14,115 - #24 (
INFO  14:20:14,116 - #28 â€?
INFO  14:20:14,116 - #48 size
INFO  14:20:14,116 - #36 <
INFO  14:20:14,116 - #48 x
INFO  14:20:14,116 - #38 &&
INFO  14:20:14,116 - #48 x
INFO  14:20:14,116 - #36 <
INFO  14:20:14,117 - #47 0
INFO  14:20:14,117 - #25 )
INFO  14:20:14,117 - #26 {
INFO  14:20:14,117 - #48 val
INFO  14:20:14,117 - #42 .
INFO  14:20:14,117 - #48 putn
INFO  14:20:14,117 - #24 (
INFO  14:20:14,117 - #48 val
INFO  14:20:14,117 - #42 .
INFO  14:20:14,117 - #48 getn
INFO  14:20:14,118 - #24 (
INFO  14:20:14,118 - #28 â€?
INFO  14:20:14,118 - #48 x
INFO  14:20:14,118 - #25 )
INFO  14:20:14,118 - #20 +
INFO  14:20:14,118 - #47 1
INFO  14:20:14,118 - #25 )
INFO  14:20:14,118 - #23 ;
INFO  14:20:14,119 - #27 }
INFO  14:20:14,119 - #16 read
INFO  14:20:14,119 - #24 (
INFO  14:20:14,119 - #48 x
INFO  14:20:14,119 - #25 )
INFO  14:20:14,119 - #23 ;
INFO  14:20:14,119 - #27 }
INFO  14:20:14,119 - #14 while
INFO  14:20:14,119 - #24 (
INFO  14:20:14,119 - #49 true
INFO  14:20:14,119 - #25 )
INFO  14:20:14,119 - #23 ;
INFO  14:20:14,120 - #3 print
INFO  14:20:14,120 - #24 (
INFO  14:20:14,120 - #48 x
INFO  14:20:14,120 - #36 <
ERROR 14:20:14,120 - 
Sintaksna greska na liniji 48
ERROR 14:20:14,120 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 48
