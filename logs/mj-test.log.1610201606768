INFO  15:09:42,193 - Compiling source file: C:\Users\dv170455d\eclipse-workspace\MJCompiler\test\program.mj
INFO  15:09:42,266 - #2 program
INFO  15:09:42,266 - #48 p
INFO  15:09:42,267 - #10 const
INFO  15:09:42,267 - #48 int
INFO  15:09:42,267 - #48 size
INFO  15:09:42,267 - #21 =
INFO  15:09:42,267 - #47 10
INFO  15:09:42,267 - #23 ;
INFO  15:09:42,267 - #7 class
INFO  15:09:42,268 - #48 Table
INFO  15:09:42,268 - #26 {
INFO  15:09:42,268 - #48 int
INFO  15:09:42,268 - #48 pos
INFO  15:09:42,268 - #43 [
INFO  15:09:42,268 - #44 ]
INFO  15:09:42,268 - #22 ,
INFO  15:09:42,268 - #48 neg
INFO  15:09:42,268 - #43 [
INFO  15:09:42,269 - #44 ]
INFO  15:09:42,269 - #23 ;
INFO  15:09:42,269 - #26 {
INFO  15:09:42,269 - #5 void
INFO  15:09:42,272 - #48 putp
INFO  15:09:42,273 - #24 (
INFO  15:09:42,273 - #48 int
INFO  15:09:42,273 - #48 a
INFO  15:09:42,273 - #22 ,
INFO  15:09:42,273 - #48 int
INFO  15:09:42,273 - #48 idx
INFO  15:09:42,273 - #25 )
INFO  15:09:42,273 - #26 {
INFO  15:09:42,273 - #48 this
INFO  15:09:42,273 - #42 .
INFO  15:09:42,273 - #48 pos
INFO  15:09:42,273 - #43 [
INFO  15:09:42,274 - #48 idx
INFO  15:09:42,274 - #44 ]
INFO  15:09:42,274 - #21 =
INFO  15:09:42,275 - #48 a
INFO  15:09:42,275 - #23 ;
INFO  15:09:42,276 - #27 }
INFO  15:09:42,276 - #5 void
INFO  15:09:42,276 - #48 putn
INFO  15:09:42,276 - #24 (
INFO  15:09:42,276 - #48 int
INFO  15:09:42,277 - #48 a
INFO  15:09:42,277 - #22 ,
INFO  15:09:42,277 - #48 int
INFO  15:09:42,277 - #48 idx
INFO  15:09:42,277 - #25 )
INFO  15:09:42,277 - #26 {
INFO  15:09:42,277 - #48 this
INFO  15:09:42,277 - #42 .
INFO  15:09:42,277 - #48 neg
INFO  15:09:42,277 - #43 [
INFO  15:09:42,277 - #48 idx
INFO  15:09:42,277 - #44 ]
INFO  15:09:42,277 - #21 =
INFO  15:09:42,277 - #48 a
INFO  15:09:42,278 - #23 ;
INFO  15:09:42,278 - #27 }
INFO  15:09:42,278 - #48 int
INFO  15:09:42,278 - #48 getp
INFO  15:09:42,278 - #24 (
INFO  15:09:42,278 - #48 int
INFO  15:09:42,278 - #48 idx
INFO  15:09:42,278 - #25 )
INFO  15:09:42,278 - #26 {
INFO  15:09:42,278 - #4 return
INFO  15:09:42,279 - #48 pos
INFO  15:09:42,279 - #43 [
INFO  15:09:42,279 - #48 idx
INFO  15:09:42,279 - #44 ]
INFO  15:09:42,279 - #23 ;
INFO  15:09:42,279 - #27 }
INFO  15:09:42,279 - #48 int
INFO  15:09:42,279 - #48 getn
INFO  15:09:42,279 - #24 (
INFO  15:09:42,279 - #48 int
INFO  15:09:42,279 - #48 idx
INFO  15:09:42,280 - #25 )
INFO  15:09:42,280 - #26 {
INFO  15:09:42,280 - #4 return
INFO  15:09:42,280 - #48 neg
INFO  15:09:42,280 - #43 [
INFO  15:09:42,280 - #48 idx
INFO  15:09:42,280 - #44 ]
INFO  15:09:42,280 - #23 ;
INFO  15:09:42,280 - #27 }
INFO  15:09:42,280 - #27 }
INFO  15:09:42,280 - #27 }
INFO  15:09:42,280 - #48 Table
INFO  15:09:42,281 - #48 val
INFO  15:09:42,281 - #23 ;
INFO  15:09:42,281 - #26 {
INFO  15:09:42,281 - #5 void
INFO  15:09:42,281 - #48 f
INFO  15:09:42,281 - #24 (
INFO  15:09:42,281 - #48 char
INFO  15:09:42,281 - #48 ch
INFO  15:09:42,282 - #22 ,
INFO  15:09:42,282 - #48 int
INFO  15:09:42,282 - #48 a
INFO  15:09:42,282 - #22 ,
INFO  15:09:42,282 - #48 int
INFO  15:09:42,282 - #48 arg
INFO  15:09:42,282 - #25 )
INFO  15:09:42,282 - #48 int
INFO  15:09:42,282 - #48 x
INFO  15:09:42,282 - #23 ;
INFO  15:09:42,282 - #26 {
INFO  15:09:42,282 - #48 x
INFO  15:09:42,282 - #21 =
INFO  15:09:42,283 - #48 arg
INFO  15:09:42,283 - #23 ;
INFO  15:09:42,283 - #27 }
INFO  15:09:42,283 - #5 void
INFO  15:09:42,283 - #48 main
INFO  15:09:42,283 - #24 (
INFO  15:09:42,283 - #25 )
INFO  15:09:42,283 - #48 int
INFO  15:09:42,283 - #48 x
INFO  15:09:42,283 - #22 ,
INFO  15:09:42,283 - #48 i
INFO  15:09:42,283 - #23 ;
INFO  15:09:42,284 - #48 char
INFO  15:09:42,284 - #48 c
INFO  15:09:42,284 - #23 ;
INFO  15:09:42,284 - #26 {
INFO  15:09:42,284 - #48 val
INFO  15:09:42,284 - #21 =
INFO  15:09:42,284 - #15 new
INFO  15:09:42,284 - #48 Table
INFO  15:09:42,284 - #23 ;
INFO  15:09:42,284 - #48 val
INFO  15:09:42,284 - #42 .
INFO  15:09:42,284 - #48 pos
INFO  15:09:42,285 - #21 =
INFO  15:09:42,285 - #15 new
INFO  15:09:42,285 - #48 int
INFO  15:09:42,285 - #43 [
INFO  15:09:42,285 - #48 size
INFO  15:09:42,285 - #44 ]
INFO  15:09:42,285 - #23 ;
INFO  15:09:42,285 - #48 val
INFO  15:09:42,285 - #42 .
INFO  15:09:42,285 - #48 neg
INFO  15:09:42,285 - #21 =
INFO  15:09:42,285 - #15 new
INFO  15:09:42,285 - #48 int
INFO  15:09:42,285 - #43 [
INFO  15:09:42,285 - #48 size
INFO  15:09:42,285 - #44 ]
INFO  15:09:42,286 - #23 ;
INFO  15:09:42,286 - #48 i
INFO  15:09:42,286 - #21 =
INFO  15:09:42,286 - #47 0
INFO  15:09:42,286 - #23 ;
INFO  15:09:42,286 - #13 do
INFO  15:09:42,286 - #26 {
INFO  15:09:42,286 - #48 val
INFO  15:09:42,286 - #42 .
INFO  15:09:42,286 - #48 putp
INFO  15:09:42,286 - #24 (
INFO  15:09:42,286 - #47 0
INFO  15:09:42,286 - #22 ,
INFO  15:09:42,286 - #48 i
INFO  15:09:42,286 - #25 )
INFO  15:09:42,287 - #23 ;
INFO  15:09:42,287 - #48 val
INFO  15:09:42,287 - #42 .
INFO  15:09:42,287 - #48 putn
INFO  15:09:42,287 - #24 (
INFO  15:09:42,287 - #47 0
INFO  15:09:42,287 - #22 ,
INFO  15:09:42,287 - #48 i
INFO  15:09:42,287 - #25 )
INFO  15:09:42,287 - #23 ;
INFO  15:09:42,287 - #48 i
INFO  15:09:42,288 - #40 ++
INFO  15:09:42,288 - #23 ;
INFO  15:09:42,288 - #27 }
INFO  15:09:42,288 - #14 while
INFO  15:09:42,288 - #24 (
INFO  15:09:42,288 - #48 i
INFO  15:09:42,288 - #36 <
INFO  15:09:42,288 - #48 size
INFO  15:09:42,289 - #25 )
INFO  15:09:42,289 - #23 ;
INFO  15:09:42,289 - #48 f
INFO  15:09:42,290 - #24 (
INFO  15:09:42,290 - #48 c
INFO  15:09:42,290 - #22 ,
INFO  15:09:42,290 - #48 x
INFO  15:09:42,290 - #22 ,
INFO  15:09:42,290 - #48 i
INFO  15:09:42,290 - #25 )
INFO  15:09:42,290 - #23 ;
INFO  15:09:42,290 - #16 read
INFO  15:09:42,290 - #24 (
INFO  15:09:42,290 - #48 x
INFO  15:09:42,290 - #25 )
INFO  15:09:42,290 - #23 ;
INFO  15:09:42,291 - #13 do
INFO  15:09:42,291 - #26 {
INFO  15:09:42,291 - #11 if
INFO  15:09:42,291 - #24 (
INFO  15:09:42,291 - #48 x
INFO  15:09:42,291 - #37 <=
INFO  15:09:42,291 - #47 0
INFO  15:09:42,291 - #25 )
INFO  15:09:42,292 - #6 break
INFO  15:09:42,292 - #23 ;
INFO  15:09:42,292 - #11 if
INFO  15:09:42,292 - #24 (
INFO  15:09:42,292 - #47 0
INFO  15:09:42,292 - #37 <=
INFO  15:09:42,292 - #48 x
INFO  15:09:42,292 - #38 &&
INFO  15:09:42,293 - #48 x
INFO  15:09:42,293 - #36 <
INFO  15:09:42,293 - #48 size
INFO  15:09:42,293 - #25 )
INFO  15:09:42,293 - #26 {
INFO  15:09:42,293 - #48 val
INFO  15:09:42,293 - #42 .
INFO  15:09:42,293 - #48 putp
INFO  15:09:42,293 - #24 (
INFO  15:09:42,293 - #48 val
INFO  15:09:42,293 - #42 .
INFO  15:09:42,293 - #48 getp
INFO  15:09:42,293 - #24 (
INFO  15:09:42,293 - #48 x
INFO  15:09:42,294 - #25 )
INFO  15:09:42,294 - #20 +
INFO  15:09:42,294 - #47 1
INFO  15:09:42,295 - #25 )
INFO  15:09:42,295 - #23 ;
INFO  15:09:42,295 - #27 }
INFO  15:09:42,295 - #9 else
INFO  15:09:42,296 - #11 if
INFO  15:09:42,296 - #24 (
INFO  15:09:42,296 - #28 â€?
INFO  15:09:42,296 - #48 size
INFO  15:09:42,296 - #36 <
INFO  15:09:42,296 - #48 x
INFO  15:09:42,297 - #38 &&
INFO  15:09:42,297 - #48 x
INFO  15:09:42,297 - #36 <
INFO  15:09:42,297 - #47 0
INFO  15:09:42,297 - #25 )
INFO  15:09:42,297 - #26 {
INFO  15:09:42,297 - #48 val
INFO  15:09:42,297 - #42 .
INFO  15:09:42,298 - #48 putn
INFO  15:09:42,298 - #24 (
INFO  15:09:42,298 - #48 val
INFO  15:09:42,298 - #42 .
INFO  15:09:42,298 - #48 getn
INFO  15:09:42,298 - #24 (
INFO  15:09:42,298 - #28 â€?
INFO  15:09:42,298 - #48 x
INFO  15:09:42,298 - #25 )
INFO  15:09:42,298 - #20 +
INFO  15:09:42,298 - #47 1
INFO  15:09:42,298 - #25 )
INFO  15:09:42,299 - #23 ;
INFO  15:09:42,299 - #27 }
INFO  15:09:42,299 - #16 read
INFO  15:09:42,299 - #24 (
INFO  15:09:42,299 - #48 x
INFO  15:09:42,299 - #25 )
INFO  15:09:42,299 - #23 ;
INFO  15:09:42,299 - #27 }
INFO  15:09:42,299 - #14 while
INFO  15:09:42,300 - #24 (
INFO  15:09:42,300 - #49 true
INFO  15:09:42,300 - #25 )
INFO  15:09:42,301 - #23 ;
INFO  15:09:42,301 - #3 print
INFO  15:09:42,301 - #24 (
INFO  15:09:42,301 - #48 x
INFO  15:09:42,301 - #36 <
ERROR 15:09:42,301 - 
Sintaksna greska na liniji 48
ERROR 15:09:42,301 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 48
