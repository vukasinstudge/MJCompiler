INFO  14:14:25,497 - Compiling source file: C:\Users\dv170455d\eclipse-workspace\MJCompiler\test\program.mj
INFO  14:14:26,801 - #2 program
INFO  14:14:26,802 - #48 p
INFO  14:14:26,802 - #10 const
INFO  14:14:26,802 - #48 int
INFO  14:14:26,802 - #48 size
INFO  14:14:26,802 - #21 =
INFO  14:14:26,802 - #47 10
INFO  14:14:26,802 - #23 ;
INFO  14:14:26,802 - #7 class
INFO  14:14:26,803 - #48 Table
INFO  14:14:26,803 - #26 {
INFO  14:14:26,803 - #48 int
INFO  14:14:26,803 - #48 pos
INFO  14:14:26,803 - #43 [
INFO  14:14:26,803 - #44 ]
INFO  14:14:26,803 - #22 ,
INFO  14:14:26,803 - #48 neg
INFO  14:14:26,803 - #43 [
INFO  14:14:26,803 - #44 ]
INFO  14:14:26,803 - #23 ;
INFO  14:14:26,803 - #26 {
INFO  14:14:26,804 - #5 void
INFO  14:14:26,805 - #48 putp
INFO  14:14:26,805 - #24 (
INFO  14:14:26,805 - #48 int
INFO  14:14:26,805 - #48 a
INFO  14:14:26,805 - #22 ,
INFO  14:14:26,805 - #48 int
INFO  14:14:26,805 - #48 idx
INFO  14:14:26,805 - #25 )
INFO  14:14:26,806 - #26 {
INFO  14:14:26,806 - #48 this
INFO  14:14:26,806 - #42 .
INFO  14:14:26,806 - #48 pos
INFO  14:14:26,806 - #43 [
INFO  14:14:26,806 - #48 idx
INFO  14:14:26,806 - #44 ]
INFO  14:14:26,807 - #21 =
INFO  14:14:26,807 - #48 a
INFO  14:14:26,822 - #23 ;
INFO  14:14:26,822 - #27 }
INFO  14:14:26,823 - #5 void
INFO  14:14:26,823 - #48 putn
INFO  14:14:26,823 - #24 (
INFO  14:14:26,823 - #48 int
INFO  14:14:26,823 - #48 a
INFO  14:14:26,823 - #22 ,
INFO  14:14:26,823 - #48 int
INFO  14:14:26,823 - #48 idx
INFO  14:14:26,823 - #25 )
INFO  14:14:26,823 - #26 {
INFO  14:14:26,823 - #48 this
INFO  14:14:26,824 - #42 .
INFO  14:14:26,824 - #48 neg
INFO  14:14:26,824 - #43 [
INFO  14:14:26,824 - #48 idx
INFO  14:14:26,824 - #44 ]
INFO  14:14:26,824 - #21 =
INFO  14:14:26,824 - #48 a
INFO  14:14:26,824 - #23 ;
INFO  14:14:26,824 - #27 }
INFO  14:14:26,824 - #48 int
INFO  14:14:26,824 - #48 getp
INFO  14:14:26,825 - #24 (
INFO  14:14:26,825 - #48 int
INFO  14:14:26,825 - #48 idx
INFO  14:14:26,825 - #25 )
INFO  14:14:26,825 - #26 {
INFO  14:14:26,825 - #4 return
INFO  14:14:26,825 - #48 pos
INFO  14:14:26,825 - #43 [
INFO  14:14:26,825 - #48 idx
INFO  14:14:26,825 - #44 ]
INFO  14:14:26,825 - #23 ;
INFO  14:14:26,826 - #27 }
INFO  14:14:26,826 - #48 int
INFO  14:14:26,826 - #48 getn
INFO  14:14:26,826 - #24 (
INFO  14:14:26,826 - #48 int
INFO  14:14:26,826 - #48 idx
INFO  14:14:26,826 - #25 )
INFO  14:14:26,826 - #26 {
INFO  14:14:26,826 - #4 return
INFO  14:14:26,826 - #48 neg
INFO  14:14:26,826 - #43 [
INFO  14:14:26,826 - #48 idx
INFO  14:14:26,826 - #44 ]
INFO  14:14:26,826 - #23 ;
INFO  14:14:26,827 - #27 }
INFO  14:14:26,827 - #27 }
INFO  14:14:26,827 - #27 }
INFO  14:14:26,827 - #48 Table
INFO  14:14:26,827 - #48 val
INFO  14:14:26,827 - #23 ;
INFO  14:14:26,827 - #26 {
INFO  14:14:26,827 - #5 void
INFO  14:14:26,827 - #48 f
INFO  14:14:26,827 - #24 (
INFO  14:14:26,827 - #48 char
INFO  14:14:26,827 - #48 ch
INFO  14:14:26,827 - #22 ,
INFO  14:14:26,827 - #48 int
INFO  14:14:26,828 - #48 a
INFO  14:14:26,828 - #22 ,
INFO  14:14:26,828 - #48 int
INFO  14:14:26,828 - #48 arg
INFO  14:14:26,828 - #25 )
INFO  14:14:26,828 - #48 int
INFO  14:14:26,828 - #48 x
INFO  14:14:26,828 - #23 ;
INFO  14:14:26,828 - #26 {
INFO  14:14:26,828 - #48 x
INFO  14:14:26,828 - #21 =
INFO  14:14:26,828 - #48 arg
INFO  14:14:26,829 - #23 ;
INFO  14:14:26,829 - #27 }
INFO  14:14:26,829 - #5 void
INFO  14:14:26,829 - #48 main
INFO  14:14:26,829 - #24 (
INFO  14:14:26,829 - #25 )
INFO  14:14:26,829 - #48 int
INFO  14:14:26,829 - #48 x
INFO  14:14:26,829 - #22 ,
INFO  14:14:26,829 - #48 i
INFO  14:14:26,829 - #23 ;
INFO  14:14:26,829 - #48 char
INFO  14:14:26,829 - #48 c
INFO  14:14:26,830 - #23 ;
INFO  14:14:26,830 - #26 {
INFO  14:14:26,830 - #48 val
INFO  14:14:26,830 - #21 =
INFO  14:14:26,830 - #15 new
INFO  14:14:26,830 - #48 Table
INFO  14:14:26,830 - #23 ;
INFO  14:14:26,830 - #48 val
INFO  14:14:26,830 - #42 .
INFO  14:14:26,830 - #48 pos
INFO  14:14:26,830 - #21 =
INFO  14:14:26,830 - #15 new
INFO  14:14:26,830 - #48 int
INFO  14:14:26,830 - #43 [
INFO  14:14:26,830 - #48 size
INFO  14:14:26,830 - #44 ]
INFO  14:14:26,830 - #23 ;
INFO  14:14:26,831 - #48 val
INFO  14:14:26,831 - #42 .
INFO  14:14:26,831 - #48 neg
INFO  14:14:26,831 - #21 =
INFO  14:14:26,831 - #15 new
INFO  14:14:26,831 - #48 int
INFO  14:14:26,831 - #43 [
INFO  14:14:26,831 - #48 size
INFO  14:14:26,831 - #44 ]
INFO  14:14:26,831 - #23 ;
INFO  14:14:26,831 - #48 i
INFO  14:14:26,831 - #21 =
INFO  14:14:26,831 - #47 0
INFO  14:14:26,831 - #23 ;
INFO  14:14:26,831 - #13 do
INFO  14:14:26,831 - #26 {
INFO  14:14:26,831 - #48 val
INFO  14:14:26,832 - #42 .
INFO  14:14:26,832 - #48 putp
INFO  14:14:26,832 - #24 (
INFO  14:14:26,833 - #47 0
INFO  14:14:26,834 - #22 ,
INFO  14:14:26,834 - #48 i
INFO  14:14:26,834 - #25 )
INFO  14:14:26,834 - #23 ;
INFO  14:14:26,834 - #48 val
INFO  14:14:26,834 - #42 .
INFO  14:14:26,834 - #48 putn
INFO  14:14:26,835 - #24 (
INFO  14:14:26,835 - #47 0
INFO  14:14:26,835 - #22 ,
INFO  14:14:26,835 - #48 i
INFO  14:14:26,835 - #25 )
INFO  14:14:26,835 - #23 ;
INFO  14:14:26,835 - #48 i
INFO  14:14:26,835 - #40 ++
INFO  14:14:26,835 - #23 ;
INFO  14:14:26,835 - #27 }
INFO  14:14:26,836 - #14 while
INFO  14:14:26,836 - #24 (
INFO  14:14:26,836 - #48 i
INFO  14:14:26,836 - #36 <
INFO  14:14:26,836 - #48 size
INFO  14:14:26,856 - #25 )
INFO  14:14:26,857 - #23 ;
INFO  14:14:26,857 - #48 f
INFO  14:14:26,857 - #24 (
INFO  14:14:26,857 - #48 c
INFO  14:14:26,857 - #22 ,
INFO  14:14:26,857 - #48 x
INFO  14:14:26,858 - #22 ,
INFO  14:14:26,858 - #48 i
INFO  14:14:26,858 - #25 )
INFO  14:14:26,858 - #23 ;
INFO  14:14:26,858 - #16 read
INFO  14:14:26,858 - #24 (
INFO  14:14:26,858 - #48 x
INFO  14:14:26,858 - #25 )
INFO  14:14:26,858 - #23 ;
INFO  14:14:26,858 - #13 do
INFO  14:14:26,858 - #26 {
INFO  14:14:26,858 - #11 if
INFO  14:14:26,858 - #24 (
INFO  14:14:26,858 - #48 x
INFO  14:14:26,858 - #37 <=
INFO  14:14:26,858 - #47 0
INFO  14:14:26,872 - #25 )
INFO  14:14:26,872 - #6 break
INFO  14:14:26,872 - #23 ;
INFO  14:14:26,872 - #11 if
INFO  14:14:26,883 - #24 (
INFO  14:14:26,883 - #47 0
INFO  14:14:26,883 - #37 <=
INFO  14:14:26,883 - #48 x
INFO  14:14:26,883 - #38 &&
INFO  14:14:26,883 - #48 x
INFO  14:14:26,883 - #36 <
INFO  14:14:26,883 - #48 size
INFO  14:14:26,883 - #25 )
INFO  14:14:26,883 - #26 {
INFO  14:14:26,883 - #48 val
INFO  14:14:26,883 - #42 .
INFO  14:14:26,883 - #48 putp
INFO  14:14:26,883 - #24 (
INFO  14:14:26,884 - #48 val
INFO  14:14:26,884 - #42 .
INFO  14:14:26,884 - #48 getp
INFO  14:14:26,884 - #24 (
INFO  14:14:26,884 - #48 x
INFO  14:14:26,884 - #25 )
INFO  14:14:26,884 - #20 +
INFO  14:14:26,884 - #47 1
INFO  14:14:26,889 - #25 )
INFO  14:14:26,889 - #23 ;
INFO  14:14:26,889 - #27 }
INFO  14:14:26,890 - #9 else
INFO  14:14:26,890 - #11 if
INFO  14:14:26,890 - #24 (
INFO  14:14:26,890 - #28 â€?
INFO  14:14:26,890 - #48 size
INFO  14:14:26,890 - #36 <
INFO  14:14:26,890 - #48 x
INFO  14:14:26,890 - #38 &&
INFO  14:14:26,890 - #48 x
INFO  14:14:26,890 - #36 <
INFO  14:14:26,891 - #47 0
INFO  14:14:26,891 - #25 )
INFO  14:14:26,891 - #26 {
INFO  14:14:26,891 - #48 val
INFO  14:14:26,891 - #42 .
INFO  14:14:26,891 - #48 putn
INFO  14:14:26,891 - #24 (
INFO  14:14:26,891 - #48 val
INFO  14:14:26,891 - #42 .
INFO  14:14:26,891 - #48 getn
INFO  14:14:26,892 - #24 (
INFO  14:14:26,892 - #28 â€?
INFO  14:14:26,892 - #48 x
INFO  14:14:26,892 - #25 )
INFO  14:14:26,892 - #20 +
INFO  14:14:26,892 - #47 1
INFO  14:14:26,892 - #25 )
INFO  14:14:26,892 - #23 ;
INFO  14:14:26,892 - #27 }
INFO  14:14:26,892 - #16 read
INFO  14:14:26,892 - #24 (
INFO  14:14:26,893 - #48 x
INFO  14:14:26,893 - #25 )
INFO  14:14:26,893 - #23 ;
INFO  14:14:26,893 - #27 }
INFO  14:14:26,893 - #14 while
INFO  14:14:26,893 - #24 (
INFO  14:14:26,893 - #49 true
INFO  14:14:26,893 - #25 )
INFO  14:14:26,893 - #23 ;
INFO  14:14:26,894 - #3 print
INFO  14:14:26,894 - #24 (
INFO  14:14:26,894 - #48 x
INFO  14:14:26,894 - #36 <
ERROR 14:14:26,894 - 
Sintaksna greska na liniji 48
ERROR 14:14:26,894 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 48
