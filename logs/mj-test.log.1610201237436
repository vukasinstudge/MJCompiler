INFO  15:03:58,248 - Compiling source file: C:\Users\dv170455d\eclipse-workspace\MJCompiler\test\program.mj
INFO  15:03:58,330 - #2 program
INFO  15:03:58,330 - #48 p
INFO  15:03:58,330 - #10 const
INFO  15:03:58,331 - #48 int
INFO  15:03:58,331 - #48 size
INFO  15:03:58,331 - #21 =
INFO  15:03:58,331 - #47 10
INFO  15:03:58,331 - #23 ;
INFO  15:03:58,331 - #7 class
INFO  15:03:58,332 - #48 Table
INFO  15:03:58,332 - #26 {
INFO  15:03:58,332 - #48 int
INFO  15:03:58,332 - #48 pos
INFO  15:03:58,332 - #43 [
INFO  15:03:58,332 - #44 ]
INFO  15:03:58,332 - #22 ,
INFO  15:03:58,332 - #48 neg
INFO  15:03:58,332 - #43 [
INFO  15:03:58,332 - #44 ]
INFO  15:03:58,332 - #23 ;
INFO  15:03:58,333 - #26 {
INFO  15:03:58,333 - #5 void
INFO  15:03:58,334 - #48 putp
INFO  15:03:58,334 - #24 (
INFO  15:03:58,334 - #48 int
INFO  15:03:58,334 - #48 a
INFO  15:03:58,334 - #22 ,
INFO  15:03:58,334 - #48 int
INFO  15:03:58,334 - #48 idx
INFO  15:03:58,334 - #25 )
INFO  15:03:58,334 - #26 {
INFO  15:03:58,334 - #48 this
INFO  15:03:58,334 - #42 .
INFO  15:03:58,334 - #48 pos
INFO  15:03:58,335 - #43 [
INFO  15:03:58,335 - #48 idx
INFO  15:03:58,335 - #44 ]
INFO  15:03:58,335 - #21 =
INFO  15:03:58,336 - #48 a
INFO  15:03:58,336 - #23 ;
INFO  15:03:58,336 - #27 }
INFO  15:03:58,337 - #5 void
INFO  15:03:58,337 - #48 putn
INFO  15:03:58,337 - #24 (
INFO  15:03:58,337 - #48 int
INFO  15:03:58,337 - #48 a
INFO  15:03:58,337 - #22 ,
INFO  15:03:58,337 - #48 int
INFO  15:03:58,337 - #48 idx
INFO  15:03:58,337 - #25 )
INFO  15:03:58,338 - #26 {
INFO  15:03:58,338 - #48 this
INFO  15:03:58,338 - #42 .
INFO  15:03:58,338 - #48 neg
INFO  15:03:58,338 - #43 [
INFO  15:03:58,338 - #48 idx
INFO  15:03:58,338 - #44 ]
INFO  15:03:58,338 - #21 =
INFO  15:03:58,338 - #48 a
INFO  15:03:58,338 - #23 ;
INFO  15:03:58,338 - #27 }
INFO  15:03:58,338 - #48 int
INFO  15:03:58,339 - #48 getp
INFO  15:03:58,339 - #24 (
INFO  15:03:58,339 - #48 int
INFO  15:03:58,339 - #48 idx
INFO  15:03:58,339 - #25 )
INFO  15:03:58,339 - #26 {
INFO  15:03:58,339 - #4 return
INFO  15:03:58,339 - #48 pos
INFO  15:03:58,339 - #43 [
INFO  15:03:58,339 - #48 idx
INFO  15:03:58,339 - #44 ]
INFO  15:03:58,339 - #23 ;
INFO  15:03:58,340 - #27 }
INFO  15:03:58,340 - #48 int
INFO  15:03:58,340 - #48 getn
INFO  15:03:58,340 - #24 (
INFO  15:03:58,340 - #48 int
INFO  15:03:58,340 - #48 idx
INFO  15:03:58,340 - #25 )
INFO  15:03:58,340 - #26 {
INFO  15:03:58,340 - #4 return
INFO  15:03:58,340 - #48 neg
INFO  15:03:58,340 - #43 [
INFO  15:03:58,340 - #48 idx
INFO  15:03:58,341 - #44 ]
INFO  15:03:58,341 - #23 ;
INFO  15:03:58,341 - #27 }
INFO  15:03:58,341 - #27 }
INFO  15:03:58,341 - #27 }
INFO  15:03:58,341 - #48 Table
INFO  15:03:58,342 - #48 val
INFO  15:03:58,342 - #23 ;
INFO  15:03:58,342 - #26 {
INFO  15:03:58,342 - #5 void
INFO  15:03:58,342 - #48 f
INFO  15:03:58,342 - #24 (
INFO  15:03:58,343 - #48 char
INFO  15:03:58,343 - #48 ch
INFO  15:03:58,344 - #22 ,
INFO  15:03:58,345 - #48 int
INFO  15:03:58,345 - #48 a
INFO  15:03:58,345 - #22 ,
INFO  15:03:58,345 - #48 int
INFO  15:03:58,345 - #48 arg
INFO  15:03:58,345 - #25 )
INFO  15:03:58,345 - #48 int
INFO  15:03:58,345 - #48 x
INFO  15:03:58,345 - #23 ;
INFO  15:03:58,346 - #26 {
INFO  15:03:58,346 - #48 x
INFO  15:03:58,346 - #21 =
INFO  15:03:58,346 - #48 arg
INFO  15:03:58,346 - #23 ;
INFO  15:03:58,346 - #27 }
INFO  15:03:58,346 - #5 void
INFO  15:03:58,347 - #48 main
INFO  15:03:58,347 - #24 (
INFO  15:03:58,347 - #25 )
INFO  15:03:58,347 - #48 int
INFO  15:03:58,347 - #48 x
INFO  15:03:58,347 - #22 ,
INFO  15:03:58,347 - #48 i
INFO  15:03:58,347 - #23 ;
INFO  15:03:58,347 - #48 char
INFO  15:03:58,347 - #48 c
INFO  15:03:58,348 - #23 ;
INFO  15:03:58,348 - #26 {
INFO  15:03:58,348 - #48 val
INFO  15:03:58,348 - #21 =
INFO  15:03:58,348 - #15 new
INFO  15:03:58,348 - #48 Table
INFO  15:03:58,348 - #23 ;
INFO  15:03:58,348 - #48 val
INFO  15:03:58,348 - #42 .
INFO  15:03:58,348 - #48 pos
INFO  15:03:58,348 - #21 =
INFO  15:03:58,348 - #15 new
INFO  15:03:58,349 - #48 int
INFO  15:03:58,349 - #43 [
INFO  15:03:58,349 - #48 size
INFO  15:03:58,349 - #44 ]
INFO  15:03:58,349 - #23 ;
INFO  15:03:58,349 - #48 val
INFO  15:03:58,349 - #42 .
INFO  15:03:58,349 - #48 neg
INFO  15:03:58,349 - #21 =
INFO  15:03:58,349 - #15 new
INFO  15:03:58,349 - #48 int
INFO  15:03:58,349 - #43 [
INFO  15:03:58,349 - #48 size
INFO  15:03:58,349 - #44 ]
INFO  15:03:58,349 - #23 ;
INFO  15:03:58,349 - #48 i
INFO  15:03:58,350 - #21 =
INFO  15:03:58,350 - #47 0
INFO  15:03:58,350 - #23 ;
INFO  15:03:58,350 - #13 do
INFO  15:03:58,350 - #26 {
INFO  15:03:58,350 - #48 val
INFO  15:03:58,350 - #42 .
INFO  15:03:58,350 - #48 putp
INFO  15:03:58,350 - #24 (
INFO  15:03:58,351 - #47 0
INFO  15:03:58,351 - #22 ,
INFO  15:03:58,351 - #48 i
INFO  15:03:58,351 - #25 )
INFO  15:03:58,351 - #23 ;
INFO  15:03:58,351 - #48 val
INFO  15:03:58,351 - #42 .
INFO  15:03:58,351 - #48 putn
INFO  15:03:58,352 - #24 (
INFO  15:03:58,352 - #47 0
INFO  15:03:58,352 - #22 ,
INFO  15:03:58,352 - #48 i
INFO  15:03:58,352 - #25 )
INFO  15:03:58,352 - #23 ;
INFO  15:03:58,352 - #48 i
INFO  15:03:58,352 - #40 ++
INFO  15:03:58,352 - #23 ;
INFO  15:03:58,352 - #27 }
INFO  15:03:58,353 - #14 while
INFO  15:03:58,353 - #24 (
INFO  15:03:58,353 - #48 i
INFO  15:03:58,353 - #36 <
INFO  15:03:58,353 - #48 size
INFO  15:03:58,354 - #25 )
INFO  15:03:58,355 - #23 ;
INFO  15:03:58,355 - #48 f
INFO  15:03:58,356 - #24 (
INFO  15:03:58,356 - #48 c
INFO  15:03:58,356 - #22 ,
INFO  15:03:58,356 - #48 x
INFO  15:03:58,356 - #22 ,
INFO  15:03:58,356 - #48 i
INFO  15:03:58,356 - #25 )
INFO  15:03:58,356 - #23 ;
INFO  15:03:58,357 - #16 read
INFO  15:03:58,357 - #24 (
INFO  15:03:58,357 - #48 x
INFO  15:03:58,357 - #25 )
INFO  15:03:58,357 - #23 ;
INFO  15:03:58,357 - #13 do
INFO  15:03:58,357 - #26 {
INFO  15:03:58,357 - #11 if
INFO  15:03:58,357 - #24 (
INFO  15:03:58,357 - #48 x
INFO  15:03:58,357 - #37 <=
INFO  15:03:58,357 - #47 0
INFO  15:03:58,358 - #25 )
INFO  15:03:58,359 - #6 break
INFO  15:03:58,359 - #23 ;
INFO  15:03:58,359 - #11 if
INFO  15:03:58,360 - #24 (
INFO  15:03:58,360 - #47 0
INFO  15:03:58,360 - #37 <=
INFO  15:03:58,360 - #48 x
INFO  15:03:58,360 - #38 &&
INFO  15:03:58,360 - #48 x
INFO  15:03:58,360 - #36 <
INFO  15:03:58,360 - #48 size
INFO  15:03:58,360 - #25 )
INFO  15:03:58,360 - #26 {
INFO  15:03:58,360 - #48 val
INFO  15:03:58,361 - #42 .
INFO  15:03:58,361 - #48 putp
INFO  15:03:58,361 - #24 (
INFO  15:03:58,361 - #48 val
INFO  15:03:58,361 - #42 .
INFO  15:03:58,361 - #48 getp
INFO  15:03:58,361 - #24 (
INFO  15:03:58,361 - #48 x
INFO  15:03:58,361 - #25 )
INFO  15:03:58,361 - #20 +
INFO  15:03:58,361 - #47 1
INFO  15:03:58,362 - #25 )
INFO  15:03:58,363 - #23 ;
INFO  15:03:58,363 - #27 }
INFO  15:03:58,363 - #9 else
INFO  15:03:58,363 - #11 if
INFO  15:03:58,363 - #24 (
INFO  15:03:58,363 - #28 â€?
INFO  15:03:58,364 - #48 size
INFO  15:03:58,364 - #36 <
INFO  15:03:58,364 - #48 x
INFO  15:03:58,364 - #38 &&
INFO  15:03:58,365 - #48 x
INFO  15:03:58,365 - #36 <
INFO  15:03:58,365 - #47 0
INFO  15:03:58,365 - #25 )
INFO  15:03:58,365 - #26 {
INFO  15:03:58,365 - #48 val
INFO  15:03:58,365 - #42 .
INFO  15:03:58,366 - #48 putn
INFO  15:03:58,366 - #24 (
INFO  15:03:58,366 - #48 val
INFO  15:03:58,366 - #42 .
INFO  15:03:58,366 - #48 getn
INFO  15:03:58,366 - #24 (
INFO  15:03:58,366 - #28 â€?
INFO  15:03:58,366 - #48 x
INFO  15:03:58,366 - #25 )
INFO  15:03:58,366 - #20 +
INFO  15:03:58,367 - #47 1
INFO  15:03:58,367 - #25 )
INFO  15:03:58,367 - #23 ;
INFO  15:03:58,367 - #27 }
INFO  15:03:58,367 - #16 read
INFO  15:03:58,368 - #24 (
INFO  15:03:58,368 - #48 x
INFO  15:03:58,368 - #25 )
INFO  15:03:58,368 - #23 ;
INFO  15:03:58,368 - #27 }
INFO  15:03:58,368 - #14 while
INFO  15:03:58,369 - #24 (
INFO  15:03:58,369 - #49 true
INFO  15:03:58,369 - #25 )
INFO  15:03:58,369 - #23 ;
INFO  15:03:58,369 - #3 print
INFO  15:03:58,369 - #24 (
INFO  15:03:58,369 - #48 x
INFO  15:03:58,369 - #36 <
ERROR 15:03:58,370 - 
Sintaksna greska na liniji 48
ERROR 15:03:58,370 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 48
